<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "guestBook">
	<sql id="search">
		<choose>
		
			<when test="searchGubun=='name">
				and name like '%' || #{searchData} || '%'
			</when>
			
			<when test="searchGubun=='content' ">
				and content like '%' || #{searchData} || '%'
			</when>
			<when test="searchGubun=='name_content' ">
				and (
				name like '%' || #{searchData} || '%' or
				content like '%' || #{searchData} || '%'
				)
			</when>
			
			
			<!-- <when test="searchGubun=='content' ">  <- 구분이랑 데이터가 널이 아니고 and 공백도 아니다로 조건주고 필드명을 ${searchGubun},${searchData}
				and content like '%' || #{searchData} || '%'
			</when> -->
			
			<otherwise>
			
			</otherwise>
		</choose>
	</sql>


	<select id="getTotalRecord" resultType="int">
	select count(*) from guestBook where 1=1
	<include refid="search"></include>
	</select>
	
	
	<select id="getSelectAll" resultType="test.guestBook.model.dto.GuestBookDTO">
		<!-- select * from guestBook where 1=1
		<include refid="search"></include>
		order by no desc -->
		
		select * from (select A.*, Rownum Rnum from (
			select * from guestBook where 1= 1
			<include refid="search"></include>
			order by no desc
			
			<![CDATA[
				) A) where Rnum >= #{startRecord} and Rnum <= #{lastRecord}
			]]>
	</select>
	
	<select id="getSelectOne" resultType="test.guestBook.model.dto.GuestBookDTO">
		select * from guestBook where no = ${paramDto.no}
	</select>
	
	
	<insert id="setInsert">
		insert into guestBook (no, name, email, passwd, content, regiDate)
		values (seq_guestBook.nextval, #{name}, #{email}, #{passwd}, #{content}, sysdate)
	</insert>
	
	<update id="setUpdate">
		update ${tableName} set name = #{paramDto.name}, email = #{paramDto.email}, content = #{paramDto.content}
		where no = #{paramDto.no}
	</update>
	
	<delete id="setDelete">
		delete from ${tableName} where no = #{paramDto.no} and passwd = #{paramDto.passwd}
	</delete>
	
</mapper>